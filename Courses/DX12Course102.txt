DX 12 Course 102

This course will build on 101 where you will implement a Graphics engine using DirectX 12. 

	Download source for the "Matthew5" project. Download the zip file.
		https://github.com/davants/Matthew5
		
	Get the Solution running.
	
	In this solution there are 3 projects; 2 libraries and the exe application that 
		uses the 2 libraries.
		Libraries: Matthew5Graphics and Matthew5Windows
		Exe: Matthew5
		
	Create a training course that builds the Matthew5Graphics library 
	from scratch. You do not have to build the Matthew5Windows from scratch, you can 
	use it as is, just cover it briefly. Before recording to video, you must write up an 
	outline script and review with the teacher ahead of time. Once approved then make the 
	video.
	Include a lot of C++ training in the tutorials, assuming they have a basic understanding 
	of C++ but not advanced knowledge. Any DirectX data types must be reviewed and talked about.
	For each video you will publish your outline.
	
	Here is a basic "Getting Started" set of steps you can take.
	Make a training for each; first approved by teacher then video.
	Each video should not be more than 15 minutes so you will need to organize and 
	break each area listed below into multiple videos.
	
		- Review how to setup visual studio with a static library and an exe.
			See https://github.com/davants/JesusIsLord/blob/master/Lessons/Cpp/CppVisualStudioLinkingProjects.txt
			You will have 2 projects. One for the Exe and one for the graphics library. 
			In the Matthew5 Version 1.000 the graphics library project is called Matthew5Graphics.
		- Review how to add the Matthew5Windows project and set "include" paths 
			and so on. 
		- Review basic functionality of the Matthew5Windows library using a simple 
			console application.

		Now start adding code to your graphics library	
		
Goal - Create Matthew5 Graphics Version 1.000 that outputs one triangle.

	Overview 
		The approach is to bulid the smaller classes first and then add the Matthew5Graphics 
		class hierarchy.


	Sub-Goal 1)
		Overview 
			Create the Matthew 5 Gpu Device Factory.
			
	Sub-Goal 2) 
		Overview 
			Create the Matthew 5 Gpu Command Object.
			
	Sub-Goal 3) 
		Overview 
			Create the Matthew 5 Gpu Memory Upload Buffer 
			
	




	Sub-Goal 10
		Overview 
			We will stub out all the components and class functions/methods to call the 
			Draw function in main.
			It will not do anything at this point.
			The main interface class is IMatthew5Graphics. It will have one pure virual 
			function named "Draw".
			Matthew5Dx derives from IMatthew5Graphics and Matthew5DxDesktop derives from Matthew5Dx.
			Main will have a pointer to data type IMatthew5Graphics and the object on the heap 
			that it points to will be of data type Matthew5DxDesktop. 
			The Draw function take one parameter that specifies "draw instructions".
			Add the code to main to call draw in the infinate while loop.
			
			
		
		
			


